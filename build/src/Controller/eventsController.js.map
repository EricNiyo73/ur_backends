{"version":3,"file":"eventsController.js","names":["_express","_interopRequireDefault","require","_bodyParser","_eventModel","_multer","_dotenv","_cloudinary","_nodemailer","_subscribers","obj","__esModule","default","path","dotenv","config","router","Router","app","express","use","static","join","process","cwd","bodyParser","urlencoded","extended","json","cloudinary","cloud_name","env","CLOUDNAME","api_key","API_KEY","api_secret","API_SECRET","upload","multer","storage","diskStorage","fileFilter","req","file","cb","ext","extname","originalname","Error","error","exports","createEvent","res","emailSubject","emailBody","transporter","nodemailer","createTransport","host","port","auth","user","EMAIL_USER","pass","EMAIL_PASS","tls","rejectUnauthorized","send","console","log","result","uploader","newevent","eventModel","eventImage","secure_url","eventTitle","body","eventContent","saveEvent","save","subscribedUsers","subscriber","find","forEach","mailOptions","from","to","email","subject","html","name","headers","sendMail","info","response","status","findAll","events","data","err","getOne","findById","params","id","deleteEvent","delete","updateEvent","updatedEvent","findByIdAndUpdate","new","_default"],"sources":["../../../src/Controller/eventsController.js"],"sourcesContent":["import  Router  from 'express';\nimport bodyParser from 'body-parser';\nimport eventModel from \"../model/eventModel.js\";\nimport multer from \"multer\";\nconst path = require(\"path\");\nimport express from \"express\";\nimport dotenv from 'dotenv';\nimport { v2 as cloudinary } from 'cloudinary';\nimport nodemailer from \"nodemailer\";\nimport subscriber from '../model/subscribers.js';\n\ndotenv.config();\nconst router = Router();\nconst app = express();\n\nrouter.use(\"/images\", express.static(path.join(process.cwd(), \"/images\")));\nrouter.use(bodyParser.urlencoded({ extended: true }))\nrouter.use(bodyParser.json());\n\n// ============Claudinary configuration=================\ncloudinary.config({\n  cloud_name:process.env.CLOUDNAME,\n  api_key:process.env.API_KEY,\n  api_secret:process.env.API_SECRET\n});\n\nexport var upload = multer({\n  storage: multer.diskStorage({}),\n  fileFilter: (req, file, cb) => {\n    try {\n      let ext = path.extname(file.originalname);\n      if (ext !== \".pdf\" && ext !== \".JPG\" && ext !== \".JPEG\" && ext !== \".PNG\" && ext !== \".jpg\" && ext !== \".jpeg\" && ext !== \".png\"){\n        return cb(new Error(\"File type is not supported\"), false);\n      }\n      cb(null, true);\n    } catch (error) {\n      return cb(error, false);\n    }\n  },\n});\n\n// =============================Create a Event=====================\nexport const createEvent = async (req, res) => {\n  try {\n\n        // create a notification=============================\n        let emailSubject;\n    \n        let emailBody;\n        const transporter = nodemailer.createTransport({\n          host: \"smtp.gmail.com\",\n          port: 587,\n          auth: {\n            user: process.env.EMAIL_USER,\n            pass: process.env.EMAIL_PASS,\n          },\n          tls: {\n            rejectUnauthorized: false,\n          },\n        });\n    if (!req.file) \n    return res.send('Please upload a file');\n    console.log(\"Request: \", req);\n    console.log(\"Request File: \", req.file);\n    const result = await cloudinary.uploader.upload(req.file.path);\n    const newevent = new eventModel({\n      eventImage: result.secure_url,\n      eventTitle: req.body.eventTitle,\n      eventContent:req.body.eventContent,\n    })\n    const saveEvent = await newevent.save();\n\n    // ============================================================\n    const subscribedUsers = await subscriber.find();\n    emailSubject = \"New Update on UR Huye Site\";\n    emailBody = `<p>New Event added on site !!!!!</p>`;\n  subscribedUsers.forEach((user) => {\n  const mailOptions = {\n    from: process.env.EMAIL_USER,\n    to: user.email,\n    subject: emailSubject,\n    html: `<p>Dear ${user.name}</p>\n    <p>${emailBody}</p>\n    <a href=\"http://${req.headers.host}/events/\">Please click on the link to view the Events</a>`,\n  };\n  transporter.sendMail(mailOptions, (error, info) => {\n    if (error) {\n      console.error(error);\n    } else {\n      console.log(\"Email sent: \" + info.response);\n    }\n  });\n});\n// =====================================================\n    return res.status(200).json({\n      saveEvent,\n      status: \"your Event was successfully uploaded\"\n    });\n  } catch (error) {\n    console.log(\"Error: \", error);\n    return  res.status(500).json(error)\n  }\n}\n\n//   ==========================get all events========================\n  export const findAll = async (req, res) => {\n    try{\n    const events = await eventModel.find();\n      \n      return res.status(200).json({\n        data: events\n      });\n    } catch (err) {\n      return res.status(500).json(err);\n    }\n  };\n\n  // =====================get One event================================\n  export const getOne = async (req, res) => {\n    try {\n      const events = await eventModel.findById(req.params.id);\n      return res.status(200).json(events);\n    } catch (err) {\n      return res.status(500).json(err);\n    }\n  };\n  // ======================Delete==============================\n  export const deleteEvent = async (req, res) => {\n    try {\n      const events = await eventModel.findById(req.params.id);\n        try {\n          await events.delete();\n          return res.status(200).json(\"Event has been deleted...\");\n        } catch (err) {\n          return  res.status(500).json(err);\n        }\n    } catch (err) {\n      return res.status(500).json(err);\n    }\n  };\n\n  // ===============Update=============================\n  export const updateEvent = async (req, res) => {\n      try {\n        const result = await cloudinary.uploader.upload(req.file.path);\n        const updatedEvent = await eventModel.findByIdAndUpdate(\n          req.params.id,\n          {\n            eventTitle: req.body.eventTitle,\n            eventContent: req.body.eventContent,\n            eventImage: result.secure_url\n          },\n          { new: true }\n        );\n     return res.status(200).json(updatedEvent);\n      } catch (err) {\n        res.status(500).json(err);\n  };\n}\nexport default router;"],"mappings":"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"}