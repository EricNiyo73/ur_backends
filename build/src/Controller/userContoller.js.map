{"version":3,"file":"userContoller.js","names":["_userModel","_interopRequireDefault","require","_bcrypt","_jsonwebtoken","_multer","_express","_bodyParser","_nodemailer","_verifyEmail","_dotenv","crypto","_interopRequireWildcard","_cloudinary","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","path","router","Router","dotenv","config","mailOptions","newUser","req","emailSubject","emailBody","fullname","headers","host","emailToken","from","process","env","EMAIL_USER","to","email","subject","html","use","express","static","join","cwd","bodyParser","urlencoded","extended","json","cloudinary","cloud_name","CLOUDNAME","api_key","API_KEY","api_secret","API_SECRET","upload","multer","storage","diskStorage","fileFilter","file","cb","ext","extname","originalname","Error","error","exports","createUser","res","transporter","nodemailer","createTransport","port","auth","user","pass","EMAIL_PASS","tls","rejectUnauthorized","existingEmail","User","findOne","body","emailRegex","test","status","message","role","randomBytes","toString","save","then","result","data","catch","console","log","sendMail","info","response","err","code","createmany","next","index","length","create","insertedUsers","login","isVerified","validated","bcrypt","compare","password","token","jwt","sign","id","_id","JWT_SECRET","expiresIn","getOne","users","findById","params","getAll","find","send","updateUser","uploader","updatedUser","findByIdAndUpdate","$set","firstname","lastname","userImage","secure_url","new","deleteUser","findByIdAndDelete","verifyEmail","updateOne","deleteAll","deleteMany"],"sources":["../../../src/Controller/userContoller.js"],"sourcesContent":["import User from \"../model/userModel.js\";\nimport bcrypt from \"bcrypt\";\nimport jwt from \"jsonwebtoken\";\nimport multer from \"multer\";\nconst path = require(\"path\");\nimport Router from \"express\";\nimport express from \"express\";\nconst router = Router();\nimport bodyParser from \"body-parser\";\nimport nodemailer from \"nodemailer\";\nimport { verify } from \"../helpers/verifyEmail\";\nimport dotenv from \"dotenv\";\ndotenv.config();\nimport * as crypto from \"crypto\";\n\nconst mailOptions = (newUser, req) => {\n  let emailSubject = \"Email verification\";\n  let emailBody = `<p>Dear ${newUser.fullname},</p>\n               <p>You have registered on our site.</p>\n               <p>Please verify your email to continue...</p>\n               <a href=\"http://${req.headers.host}/user/verify-email/${newUser.emailToken}\">Verify Email</a>`;\n  return {\n    from: process.env.EMAIL_USER,\n    to: newUser.email,\n    subject: emailSubject,\n    html: emailBody,\n  };\n};\nrouter.use(\"/images\", express.static(path.join(process.cwd(), \"/images\")));\nrouter.use(bodyParser.urlencoded({ extended: true }));\nrouter.use(bodyParser.json());\n\n// ============Claudinary configuration=================\nimport { v2 as cloudinary } from \"cloudinary\";\ncloudinary.config({\n  cloud_name: process.env.CLOUDNAME,\n  api_key: process.env.API_KEY,\n  api_secret: process.env.API_SECRET,\n});\nexport let upload = multer({\n  storage: multer.diskStorage({}),\n  fileFilter: (req, file, cb) => {\n    try {\n      let ext = path.extname(file.originalname);\n      if (\n        ext !== \".JPG\" &&\n        ext !== \".JPEG\" &&\n        ext !== \".PNG\" &&\n        ext !== \".jpg\" &&\n        ext !== \".jpeg\" &&\n        ext !== \".png\"\n      ) {\n        return cb(new Error(\"File type is not supported\"), false);\n      }\n      cb(null, true);\n    } catch (error) {\n      return cb(error, false);\n    }\n  },\n});\nexport const createUser = async (req, res) => {\n  try {\n    // sending verification email\n    const transporter = nodemailer.createTransport({\n      host: \"smtp.gmail.com\",\n      port: 587,\n      auth: {\n        user: process.env.EMAIL_USER,\n        pass: process.env.EMAIL_PASS,\n      },\n      tls: {\n        rejectUnauthorized: false,\n      },\n    });\n    // const result = await cloudinary.uploader.upload(req.file.path);\n\n    const existingEmail = await User.findOne({ email: req.body.email });\n    // Email validation using a regular expression\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    if (!emailRegex.test(req.body.email)) {\n      return res.status(400).json({\n        message: \"Invalid email format\",\n      });\n    }\n    if (existingEmail) {\n      return res.status(409).json({\n        message: \"Email  already exists\",\n      });\n    } else {\n      // Create a user\n      const newUser = new User({\n        fullname: req.body.fullname,\n        email: req.body.email,\n        role: req.body.role,\n        emailToken: crypto.randomBytes(64).toString(\"hex\"),\n      });\n\n      newUser\n        .save()\n        .then((result) => {\n          return res.status(200).json({\n            status: \"success\",\n            data: {\n              user: newUser,\n            },\n          });\n        })\n        .catch((error) => {\n          return res.status(500).json({\n            error,\n          });\n        });\n      console.log(req.body);\n\n      //sending email\n      transporter.sendMail(mailOptions(newUser), (error, info) => {\n        if (error) {\n          console.error(error);\n        } else {\n          console.log(\"Email sent: \" + info.response);\n        }\n      });\n    }\n  } catch (err) {\n    if (err.code === \"Cannot set headers after they are sent to the client\") {\n      console.error(err);\n      return res.status(500).json({\n        message: \"Unexpected error\",\n      });\n    }\n  }\n};\n\nexport const createmany = async (req, res, next) => {\n  const transporter = nodemailer.createTransport({\n    host: \"smtp.gmail.com\",\n    port: 587,\n    auth: {\n      user: process.env.EMAIL_USER,\n      pass: process.env.EMAIL_PASS,\n    },\n    tls: {\n      rejectUnauthorized: false,\n    },\n  });\n  try {\n    for (let index = 0; index < req.body.length; index++) {\n      const existingEmail = await User.findOne({\n        email: req.body[index].email,\n      });\n      if (existingEmail) {\n        // break;\n        return res.status(409).json({\n          message: `${req.body[index].email} already exists`,\n        });\n      }\n      transporter.sendMail(mailOptions(req.body[index], req), (error, info) => {\n        if (error) {\n          console.error(error);\n        } else {\n          console.log(\"Email sent: \" + info.response);\n        }\n      });\n\n      await User.create({\n        fullname: req.body[index].fullname,\n        email: req.body[index].email,\n        role: req.body[index].role,\n        emailToken: crypto.randomBytes(64).toString(\"hex\"),\n      });\n    }\n    // const res  =  await all.then(data => {\n    //   return res.status(201).json({\n    //     status: \"success\",\n    //     data: data,\n    //   });\n    // })\n\n    // console.log(...all);\n    return res.status(201).json({\n      status: \"success\",\n      insertedUsers: \"success\",\n    });\n  } catch (err) {\n    if (err.code === \"Cannot set headers after they are sent to the client\") {\n      console.error(err);\n      return res.status(500).json({\n        message: \"Unexpected error\",\n      });\n    } else {\n      res.status(500).json({\n        status: \"error\",\n        message: err.message,\n      });\n    }\n  }\n};\n// ===============================LOGIN==================================\n\nexport const login = async (req, res) => {\n  try {\n    const user = await User.findOne({ email: req.body.email });\n    if (!user.isVerified === true) {\n      return res\n        .status(403)\n        .json(\"Email not verified ,check on your email and verify your email\");\n    }\n    const validated = await bcrypt.compare(req.body.password, user.password);\n    if (!(user && validated)) {\n      return res.status(403).json(\"Invalid Email or Username!\");\n    } else {\n      const token = jwt.sign({ id: user._id }, process.env.JWT_SECRET, {\n        expiresIn: \"24h\",\n      });\n      return res.status(200).json({\n        message: \"Logged in successfully\",\n        token: token,\n      });\n    }\n  } catch (err) {\n    return res.status(500).json(err);\n  }\n};\n// ==========get one==========================\nexport const getOne = async (req, res) => {\n  try {\n    const users = await User.findById(req.params.id);\n    return res.status(200).json(users);\n  } catch (err) {\n    return res.status(500).json(err);\n  }\n};\n\n// ===============================GETALL USERS=============================\nexport const getAll = (req, res) => {\n  User.find()\n    .then((users) => {\n      return res.send(users);\n    })\n    .catch((err) => {\n      return res.status(500).send({\n        message: err.message || \"Some error occurred while retrieving user.\",\n      });\n    });\n};\n\n// ====================update==============================\nexport const updateUser = async (req, res) => {\n  try {\n    const result = await cloudinary.uploader.upload(req.file.path);\n    const updatedUser = await User.findByIdAndUpdate(\n      req.params.id,\n      {\n        $set: {\n          email: req.body.email,\n          firstname: req.body.firstname,\n          lastname: req.body.lastname,\n          password: req.body.password,\n          role: req.body.role,\n          userImage: result.secure_url,\n        },\n      },\n      { new: true }\n    );\n    if (!updatedUser) {\n      return res.status(404).json({ error: \"user not found\" });\n    }\n    return res.status(200).json(updatedUser);\n  } catch (err) {\n    res.status(500).json(err);\n  }\n};\n\n// ===================delete user================================\n\nexport const deleteUser = async (req, res) => {\n  // if (req.body.userId === req.params.id) {\n  try {\n    const user = await User.findById(req.params.id);\n    await User.findByIdAndDelete(req.params.id);\n    return res.status(200).json(\"User has been deleted...\");\n  } catch (err) {\n    return res.status(404).json(\"User not found!\");\n  }\n  // } else {\n  //   return res.status(401).json(\"You can delete only your account!\");\n  // }\n};\n\n// ===================verify====================\nexport const verifyEmail = async (req, res) => {\n  try {\n    const token = req.params.token;\n    console.log(\"tokrn------\", token);\n    const user = await User.findOne({ emailToken: token });\n    console.log(\"user------\", user);\n    if (!user) {\n      return res.status(400).json({\n        message: \"Invalid verification token\",\n      });\n    }\n    await user.updateOne({ isVerified: true });\n\n    const transporter = nodemailer.createTransport({\n      host: \"smtp.gmail.com\",\n      port: 587,\n      auth: {\n        user: process.env.EMAIL_USER,\n        pass: process.env.EMAIL_PASS,\n      },\n      tls: {\n        rejectUnauthorized: false,\n      },\n    });\n\n    let emailSubject = \"Email verified Successfully\";\n    let emailBody = `<p>Dear ${user.firstname},</p>\n             <p>Thanks for registering on our site.</p>\n             <p>Your email has been successfully verified.</p>`;\n    const mailOptions = {\n      from: process.env.EMAIL_USER,\n      to: user.email,\n      subject: emailSubject,\n      html: emailBody,\n    };\n    //sending email\n    transporter.sendMail(mailOptions, (error, info) => {\n      if (error) {\n        console.error(error);\n      } else {\n        console.log(\"Email sent: \" + info.response);\n      }\n    });\n\n    return res.status(200).json({\n      message: \"Email verified ,Now you can log in with your email\",\n    });\n  } catch (error) {\n    console.error(error);\n    return res.status(500).json({\n      message: \"Unexpected error\",\n    });\n  }\n};\nexport const deleteAll = async (req, res) => {\n  try {\n    await User.deleteMany({});\n\n    return res.status(204).json({\n      status: \"success\",\n    });\n  } catch (error) {\n    return res.status(500).json({\n      status: \"fail\",\n      message: error.message,\n    });\n  }\n};\n"],"mappings":"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"}