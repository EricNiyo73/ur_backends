{"version":3,"file":"userContoller.js","names":["_userModel","_interopRequireDefault","require","_bcrypt","_jsonwebtoken","_nodemailer","_verifyEmail","_dotenv","crypto","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","dotenv","config","createUser","req","res","emailSubject","emailBody","transporter","nodemailer","createTransport","host","port","auth","user","process","env","EMAIL_USER","pass","EMAIL_PASS","tls","rejectUnauthorized","salt","bcrypt","genSalt","hashedpassword","hash","body","password","existingEmail","User","findOne","email","emailRegex","test","status","json","message","newUser","firstname","lastname","emailToken","randomBytes","toString","save","then","result","data","catch","error","headers","mailOptions","from","to","subject","html","sendMail","info","console","log","response","err","code","exports","login","validated","compare","token","jwt","sign","id","_id","JWT_SECRET","expiresIn","getAll","find","users","send","updateUser","userId","params","updatedUser","findByIdAndUpdate","$set","new","deleteUser","findById","findByIdAndDelete"],"sources":["../../../src/Controller/userContoller.js"],"sourcesContent":["import User from \"../model/userModel.js\";\r\nimport bcrypt from \"bcrypt\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport nodemailer from \"nodemailer\";\r\nimport { verify } from \"../helpers/verifyEmail\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config();\r\nimport * as crypto from \"crypto\";\r\n\r\nexport const createUser = async (req, res) => {\r\n  try {\r\n    // sending verification email\r\n    let emailSubject;\r\n    let emailBody;\r\n    const transporter = nodemailer.createTransport({\r\n      host: \"smtp.gmail.com\",\r\n      port: 587,\r\n      auth: {\r\n        user: process.env.EMAIL_USER,\r\n        pass: process.env.EMAIL_PASS,\r\n      },\r\n      tls: {\r\n        rejectUnauthorized: false,\r\n      },\r\n    });\r\n    const salt = await bcrypt.genSalt(10);\r\n    const hashedpassword = await bcrypt.hash(req.body.password, salt);\r\n\r\n    const existingEmail = await User.findOne({ email: req.body.email });\r\n    // Email validation using a regular expression\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    if (!emailRegex.test(req.body.email)) {\r\n      return res.status(400).json({\r\n        message: \"Invalid email format\",\r\n      });\r\n    }\r\n    if (existingEmail) {\r\n      return res.status(409).json({\r\n        message: \"Email  already exists\",\r\n      });\r\n    } else {\r\n      // Create a user\r\n      const newUser = new User({\r\n        firstname: req.body.firstname,\r\n        lastname: req.body.lastname,\r\n        email: req.body.email,\r\n        password: hashedpassword,\r\n        emailToken: crypto.randomBytes(64).toString(\"hex\"),\r\n      });\r\n\r\n      newUser\r\n        .save()\r\n        .then((result) => {\r\n          return res.status(200).json({\r\n            status: \"success\",\r\n            data: {\r\n              user: newUser,\r\n            },\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          return res.status(500).json({\r\n            error,\r\n          });\r\n        });\r\n      emailSubject = \"Email verification\";\r\n      emailBody = `<p>Dear ${newUser.firstname},</p>\r\n                   <p>Thanks for registering on our site.</p>\r\n                   <p>Please verify your email to continue...</p>\r\n                   <a href=\"http://${req.headers.host}/user/verify-email?token=${newUser.emailToken}\">Verify Email</a>`;\r\n      const mailOptions = {\r\n        from: process.env.EMAIL_USER,\r\n        to: newUser.email,\r\n        subject: emailSubject,\r\n        html: emailBody,\r\n      };\r\n      //sending email\r\n      transporter.sendMail(mailOptions, (error, info) => {\r\n        if (error) {\r\n          console.error(error);\r\n        } else {\r\n          console.log(\"Email sent: \" + info.response);\r\n        }\r\n      });\r\n    }\r\n  } catch (err) {\r\n    if (err.code === \"Cannot set headers after they are sent to the client\") {\r\n      console.error(err);\r\n      return res.status(500).json({\r\n        message: \"Unexpected error\",\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\n// ===============================LOGIN==================================\r\n\r\nexport const login = async (req, res) => {\r\n  try {\r\n    const user = await User.findOne({ email: req.body.email });\r\n\r\n    const validated = await bcrypt.compare(req.body.password, user.password);\r\n    if (!(user && validated)) {\r\n      return res.status(201).json(\"Invalid Email or Username!\");\r\n    } else {\r\n      const token = jwt.sign({ id: user._id }, process.env.JWT_SECRET, {\r\n        expiresIn: \"1h\",\r\n      });\r\n      return res.status(200).json({\r\n        message: \"Logged in successfully\",\r\n        token: token,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    return res.status(500).json(err);\r\n  }\r\n};\r\n\r\n// ===============================GETALL USERS=============================\r\nexport const getAll = (req, res) => {\r\n  User.find()\r\n    .then((users) => {\r\n      return res.send(users);\r\n    })\r\n    .catch((err) => {\r\n      return res.status(500).send({\r\n        message: err.message || \"Some error occurred while retrieving user.\",\r\n      });\r\n    });\r\n};\r\n\r\n// ====================update==============================\r\nexport const updateUser = async (req, res) => {\r\n  if (req.body.userId === req.params.id) {\r\n    if (req.body.password) {\r\n      const salt = await bcrypt.genSalt(10);\r\n      req.body.password = await bcrypt.hash(req.body.password, salt);\r\n    }\r\n    try {\r\n      const updatedUser = await User.findByIdAndUpdate(\r\n        req.params.id,\r\n        {\r\n          $set: req.body,\r\n        },\r\n        { new: true }\r\n      );\r\n      return res.status(200).json(updatedUser);\r\n    } catch (err) {\r\n      res.status(500).json(err);\r\n    }\r\n  } else {\r\n    return res.status(401).json(\"You can update  your account only!\");\r\n  }\r\n};\r\n\r\n// ===================delete user================================\r\n\r\nexport const deleteUser = async (req, res) => {\r\n  if (req.body.userId === req.params.id) {\r\n    try {\r\n      const user = await User.findById(req.params.id);\r\n      await User.findByIdAndDelete(req.params.id);\r\n      return res.status(200).json(\"User has been deleted...\");\r\n    } catch (err) {\r\n      return res.status(404).json(\"User not found!\");\r\n    }\r\n  } else {\r\n    return res.status(401).json(\"You can delete only your account!\");\r\n  }\r\n};\r\n"],"mappings":"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"}