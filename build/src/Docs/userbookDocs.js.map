{"version":3,"file":"userbookDocs.js","names":[],"sources":["../../../src/Docs/userbookDocs.js"],"sourcesContent":["/**\r\n * @swagger\r\n * components:\r\n *   schemas:\r\n *     bookUser:\r\n *       type: object\r\n *       required:\r\n *         - firstname\r\n *         - lastname\r\n *         - email\r\n *         - facility\r\n *         - maxPeople\r\n *         - desc\r\n *         - date\r\n *         - time\r\n *       properties:\r\n *         firstname:\r\n *           type: string\r\n *           description: First name of the user making the booking\r\n *         lastname:\r\n *           type: string\r\n *           description: Last name of the user making the booking\r\n *         email:\r\n *           type: string\r\n *           description: Email of the user making the booking\r\n *         facility:\r\n *           type: string\r\n *           description: Name of the facility being booked\r\n *         subFacility:\r\n *           type: string\r\n *           description: Name of the sub-facility being booked\r\n *         maxPeople:\r\n *           type: integer\r\n *           description: Maximum number of people allowed in the facility\r\n *         desc:\r\n *           type: string\r\n *           description: Description of the booking\r\n *         date:\r\n *           type: date\r\n *           description: Date of the booking\r\n *         time:\r\n *           type: string\r\n *           description: Time slot for the booking (Morning, Afternoon, or Fullday)\r\n *         isAvailable:\r\n *           type: boolean\r\n *           description: Availability status of the booking\r\n *         status:\r\n *           type: string\r\n *           description: Status of the booking (Pending, Approved, or Rejected)\r\n *           enum:\r\n *             - Pending\r\n *             - Approved\r\n *             - Rejected\r\n *       example:\r\n *         firstname: Eric\r\n *         lastname: NIYO\r\n *         email: ericniyokwizerwa1@gmail.com\r\n *         facility: Gym\r\n *         subFacility: Treadmill\r\n *         maxPeople: 5\r\n *         desc: Booked for a workout session\r\n *         date: 2023-03-10\r\n *         time: Morning\r\n *         isAvailable: false\r\n *         status: Pending\r\n */\r\n\r\n\r\n/**\r\n * @swagger\r\n * /userbooking/createbook/{userId}:\r\n *   post:\r\n *     summary: Create a new booking for a user\r\n *     description: Creates a new booking for a user for a specific date and time, for a sub-facility.\r\n *     tags:\r\n *       - Booking\r\n *     parameters:\r\n *       - in: path\r\n *         name: userId\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description: The ID of the user to create the booking for.\r\n *     requestBody:\r\n *       description: The booking details to create a new booking.\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               facility:\r\n *                 type: string\r\n *                 description: The Main-facility for which the user wants to create a booking.\r\n *               subFacility:\r\n *                 type: string\r\n *                 description: The sub-facility for which the user wants to create a booking.\r\n *               date:\r\n *                 type: string\r\n *                 format: date\r\n *                 description: The date on which the user wants to create the booking.\r\n *               time:\r\n *                 type: string\r\n *                 format: time\r\n *                 description: The time at which the user wants to create the booking. May be Morning, Afternoon or Fullday.\r\n *               maxPeople:\r\n *                 type: number\r\n *                 description: The capacity of the sub-facility.\r\n *               desc:\r\n *                 type: string\r\n *                 description: The description of the sub-facility.\r\n *     produces:\r\n *       - application/json\r\n *     responses:\r\n *       200:\r\n *         description: Booking request submitted successfully\r\n *         schema:\r\n *           type: object\r\n *           properties:\r\n *             message:\r\n *               type: string\r\n *               description: A message indicating the success of the operation.\r\n\r\n *       400:\r\n *         description: Invalid input parameters\r\n *       401:\r\n *         description: No available booking for the specified date and time\r\n *       404:\r\n *         description: User not found\r\n *       500:\r\n *         description: Internal server error\r\n *   definitions:\r\n *     Booking:\r\n *       type: object\r\n *       properties:\r\n *         _id:\r\n *           type: string\r\n *           description: The unique identifier for the booking.\r\n *         facility:\r\n *           type: string\r\n *           description: The Main-facility for which the user wants to create a booking.\r\n *         subFacility:\r\n *           type: string\r\n *           description: The sub-facility for which the user wants to create a booking.\r\n *         date:\r\n *           type: string\r\n *           format: date\r\n *           description: The date on which the user wants to create the booking.\r\n *         time:\r\n *           type: string\r\n *           format: time\r\n *           description: The time at which the user wants to create the booking.\r\n *         capacity:\r\n *           type: number\r\n *           description: The capacity of the sub-facility.\r\n *         firstname:\r\n *           type: string\r\n *           description: The first name of the user who made the booking.\r\n *         lastname:\r\n *           type: string\r\n *           description: The last name of the user who made the booking.\r\n *         email:\r\n *           type: string\r\n *           description: The email of the user who made the booking\r\n */\r\n\r\n\r\n\r\n// ===========================update your booking=============================\r\n\r\n/**\r\n * @swagger\r\n * /userbooking/{id}:\r\n *   put:\r\n *     summary: Update an existing booking\r\n *     description: Updates an existing booking for a user with a given booking ID.\r\n *     tags:\r\n *       - Booking\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description: The ID of the booking to update.\r\n *     requestBody:\r\n *       description: Request body for updating a booking.\r\n *       required: true\r\n *       content:\r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               facility:\r\n *                 type: string\r\n *                 description: The Main-facility for which the user wants to create a booking.\r\n *               subFacility:\r\n *                 type: string\r\n *                 description: The sub-facility for which the user wants to create a booking.\r\n *               date:\r\n *                 type: string\r\n *                 format: date\r\n *                 description: The date on which the user wants to create the booking.\r\n *               time:\r\n *                 type: string\r\n *                 format: time\r\n *                 description: The time at which the user wants to create the booking. May be Morning, Afternoon or Fullday.\r\n *               maxPeople:\r\n *                 type: number\r\n *                 description: The capacity of the sub-facility.\r\n *               desc:\r\n *                 type: string\r\n *                 description: The description of the sub-facility.\r\n *             example:\r\n *               facility: Main Facility\r\n *               subFacility: Sub Facility\r\n *               date: 2023-03-10\r\n *               time: Morning\r\n *               maxPeople: 10\r\n *               desc: Sample Description\r\n *     responses:\r\n *       '200':\r\n *         description: Successfully updated the booking.\r\n *       '404':\r\n *         description: The booking with the provided ID was not found.\r\n *       '500':\r\n *         description: An internal server error occurred while trying to update the booking.\r\n */\r\n\r\n// ======================get one booking=====================\r\n/**\r\n * @swagger\r\n * /userbooking/{id}:\r\n *   get:\r\n *     summary: Get a specific booking\r\n *     description: Returns a specific booking based on the provided ID.\r\n *     tags:\r\n *       - Booking\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description: The ID of the booking to retrieve.\r\n *     responses:\r\n *       200:\r\n *         description: The booking object with the provided ID.\r\n *         content:\r\n *       404:\r\n *         description: A booking with the provided ID was not found.\r\n *       500:\r\n *         description: Internal server error.\r\n */\r\n\r\n\r\n// =====================get all booking====================\r\n/**\r\n * @swagger\r\n * /userbooking:\r\n *   get:\r\n *     summary: Get all bookings\r\n *     description: Retrieve a list of all bookings.\r\n *     tags:\r\n *       - Booking\r\n *     produces:\r\n *       - application/json\r\n *     responses:\r\n *       200:\r\n *         description: An array of bookings\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: array\r\n *               items:\r\n *                 $ref: '#/components/schemas/Booking'\r\n *       500:\r\n *         description: Server error\r\n */\r\n// ================delete====================\r\n/**\r\n * @swagger\r\n * /userbooking/{id}:\r\n *   delete:\r\n *     summary: Delete a booking\r\n *     description: Deletes a booking by its ID.\r\n *     tags:\r\n *       - Booking\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description: The ID of the booking to delete.\r\n *     responses:\r\n *       204:\r\n *         description: Successfully deleted the booking.\r\n *       404:\r\n *         description: Booking not found.\r\n *       400:\r\n *         description: Error while deleting the booking.\r\n */"],"mappingstBA"}