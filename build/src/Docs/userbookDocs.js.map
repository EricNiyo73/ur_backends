{"version":3,"file":"userbookDocs.js","names":[],"sources":["../../../src/Docs/userbookDocs.js"],"sourcesContent":["/**\n * @swagger\n * components:\n *   schemas:\n *     bookUser:\n *       type: object\n *       required:\n *         - firstname\n *         - lastname\n *         - email\n *         - facility\n *         - maxPeople\n *         - desc\n *         - date\n *         - time\n *       properties:\n *         firstname:\n *           type: string\n *           description: First name of the user making the booking\n *         lastname:\n *           type: string\n *           description: Last name of the user making the booking\n *         email:\n *           type: string\n *           description: Email of the user making the booking\n *         facility:\n *           type: string\n *           description: Name of the facility being booked\n *         subFacility:\n *           type: string\n *           description: Name of the sub-facility being booked\n *         maxPeople:\n *           type: integer\n *           description: Maximum number of people allowed in the facility\n *         desc:\n *           type: string\n *           description: Description of the booking\n *         date:\n *           type: date\n *           description: Date of the booking\n *         time:\n *           type: string\n *           description: Time slot for the booking (Morning, Afternoon, or Fullday)\n *         isAvailable:\n *           type: boolean\n *           description: Availability status of the booking\n *         status:\n *           type: string\n *           description: Status of the booking (Pending, Approved, or Rejected)\n *           enum:\n *             - Pending\n *             - Approved\n *             - Rejected\n *       example:\n *         firstname: Eric\n *         lastname: NIYO\n *         email: ericniyokwizerwa1@gmail.com\n *         facility: Gym\n *         subFacility: Treadmill\n *         maxPeople: 5\n *         desc: Booked for a workout session\n *         date: 2023-03-10\n *         time: Morning\n *         isAvailable: false\n *         status: Pending\n */\n\n\n/**\n * @swagger\n * /userbooking/createbook/{userId}:\n *   post:\n *     summary: Create a new booking for a user\n *     description: Creates a new booking for a user for a specific date and time, for a sub-facility.\n *     tags:\n *       - Booking\n *     parameters:\n *       - in: path\n *         name: userId\n *         schema:\n *           type: string\n *         required: true\n *         description: The ID of the user to create the booking for.\n *     requestBody:\n *       description: The booking details to create a new booking.\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               facility:\n *                 type: string\n *                 description: The Main-facility for which the user wants to create a booking.\n *               subFacility:\n *                 type: string\n *                 description: The sub-facility for which the user wants to create a booking.\n *               date:\n *                 type: string\n *                 format: date\n *                 description: The date on which the user wants to create the booking.\n *               time:\n *                 type: string\n *                 format: time\n *                 description: The time at which the user wants to create the booking. May be Morning, Afternoon or Fullday.\n *               maxPeople:\n *                 type: number\n *                 description: The capacity of the sub-facility.\n *               desc:\n *                 type: string\n *                 description: The description of the sub-facility.\n *     produces:\n *       - application/json\n *     responses:\n *       200:\n *         description: Booking request submitted successfully\n *         schema:\n *           type: object\n *           properties:\n *             message:\n *               type: string\n *               description: A message indicating the success of the operation.\n\n *       400:\n *         description: Invalid input parameters\n *       401:\n *         description: No available booking for the specified date and time\n *       404:\n *         description: User not found\n *       500:\n *         description: Internal server error\n *   definitions:\n *     Booking:\n *       type: object\n *       properties:\n *         _id:\n *           type: string\n *           description: The unique identifier for the booking.\n *         facility:\n *           type: string\n *           description: The Main-facility for which the user wants to create a booking.\n *         subFacility:\n *           type: string\n *           description: The sub-facility for which the user wants to create a booking.\n *         date:\n *           type: string\n *           format: date\n *           description: The date on which the user wants to create the booking.\n *         time:\n *           type: string\n *           format: time\n *           description: The time at which the user wants to create the booking.\n *         capacity:\n *           type: number\n *           description: The capacity of the sub-facility.\n *         firstname:\n *           type: string\n *           description: The first name of the user who made the booking.\n *         lastname:\n *           type: string\n *           description: The last name of the user who made the booking.\n *         email:\n *           type: string\n *           description: The email of the user who made the booking\n */\n\n\n\n// ===========================update your booking=============================\n\n/**\n * @swagger\n * /userbooking/{id}:\n *   put:\n *     summary: Update an existing booking\n *     description: Updates an existing booking for a user with a given booking ID.\n *     tags:\n *       - Booking\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *         description: The ID of the booking to update.\n *     requestBody:\n *       description: Request body for updating a booking.\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               facility:\n *                 type: string\n *                 description: The Main-facility for which the user wants to create a booking.\n *               subFacility:\n *                 type: string\n *                 description: The sub-facility for which the user wants to create a booking.\n *               date:\n *                 type: string\n *                 format: date\n *                 description: The date on which the user wants to create the booking.\n *               time:\n *                 type: string\n *                 format: time\n *                 description: The time at which the user wants to create the booking. May be Morning, Afternoon or Fullday.\n *               maxPeople:\n *                 type: number\n *                 description: The capacity of the sub-facility.\n *               desc:\n *                 type: string\n *                 description: The description of the sub-facility.\n *             example:\n *               facility: Main Facility\n *               subFacility: Sub Facility\n *               date: 2023-03-10\n *               time: Morning\n *               maxPeople: 10\n *               desc: Sample Description\n *     responses:\n *       '200':\n *         description: Successfully updated the booking.\n *       '404':\n *         description: The booking with the provided ID was not found.\n *       '500':\n *         description: An internal server error occurred while trying to update the booking.\n */\n\n// ======================get one booking=====================\n/**\n * @swagger\n * /userbooking/{id}:\n *   get:\n *     summary: Get a specific booking\n *     description: Returns a specific booking based on the provided ID.\n *     tags:\n *       - Booking\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *         description: The ID of the booking to retrieve.\n *     responses:\n *       200:\n *         description: The booking object with the provided ID.\n *         content:\n *       404:\n *         description: A booking with the provided ID was not found.\n *       500:\n *         description: Internal server error.\n */\n\n\n// =====================get all booking====================\n/**\n * @swagger\n * /userbooking:\n *   get:\n *     summary: Get all bookings\n *     description: Retrieve a list of all bookings.\n *     tags:\n *       - Booking\n *     produces:\n *       - application/json\n *     responses:\n *       200:\n *         description: An array of bookings\n *         content:\n *           application/json:\n *             schema:\n *               type: array\n *               items:\n *                 $ref: '#/components/schemas/Booking'\n *       500:\n *         description: Server error\n */\n// ================delete====================\n/**\n * @swagger\n * /userbooking/{id}:\n *   delete:\n *     summary: Delete a booking\n *     description: Deletes a booking by its ID.\n *     tags:\n *       - Booking\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *         description: The ID of the booking to delete.\n *     responses:\n *       204:\n *         description: Successfully deleted the booking.\n *       404:\n *         description: Booking not found.\n *       400:\n *         description: Error while deleting the booking.\n */"],"mappingstBA"}