{"version":3,"file":"userDocs.js","names":[],"sources":["../../../src/Docs/userDocs.js"],"sourcesContent":["/**\n * @swagger\n * components:\n *   schemas:\n *     UserModel:\n *       type: object\n *       properties:\n *         firstname:\n *           type: string\n *           description: First name of the user\n *         lastname:\n *           type: string\n *           description: Last name of the user\n *         email:\n *           type: string\n *           description: Email of the user\n *         password:\n *           type: string\n *           description: Password of the user\n *         emailToken:\n *           type: string\n *           description: Email verification token of the user\n *         isVerified:\n *           type: boolean\n *           description: Whether the user's email has been verified\n *         role:\n *           type: string\n *           description: Role of the user\n *           enum:\n *             - user\n *             - admin\n *             - leader\n *           default: user\n *         date:\n *           type: string\n *           format: date-time\n *           description: Date and time when the user was created\n *       required:\n *         - firstname\n *         - lastname\n *         - email\n *         - password\n *         - emailToken\n */\n\n\n\n\n\n/**\n * @swagger\n * /user/signup:\n *   post:\n *     summary: Create a new user\n *     description: Creates a new user account and sends a verification email\n *     tags:\n *       - users\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               firstname:\n *                 type: string\n *               lastname:\n *                 type: string\n *               email:\n *                 type: string\n *               password:\n *                 type: string\n *     responses:\n *       '200':\n *         description: User account created successfully\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 status:\n *                   type: string\n *                   description: Status of the response\n *                 data:\n *                   type: object\n *                   description: Response data\n *                   properties:\n *                     user:\n *                       type: object\n *                       description: Created user object\n *                       properties:\n *                         _id:\n *                           type: string\n *                           description: Unique ID of the user\n *                         firstname:\n *                           type: string\n *                           description: First name of the user\n *                         lastname:\n *                           type: string\n *                           description: Last name of the user\n *                         email:\n *                           type: string\n *                           description: Email address of the user\n *                         emailToken:\n *                           type: string\n *                           description: Verification token for the user's email address\n *       '400':\n *         description: Invalid email format\n *       '409':\n *         description: Email already exists\n *       '500':\n *         description: Unexpected error\n */\n\n/**\n * @swagger\n * /user/login:\n *   post:\n *     summary: Authenticate user and get a JWT token\n *     description: Authenticate user with email and password, and return a JWT token\n *     tags:\n *       - users\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               email:\n *                 type: string\n *               password:\n *                 type: string\n *     responses:\n *       '200':\n *         description: Logged in successfully\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   description: Status message\n *                 token:\n *                   type: string\n *                   description: JWT token for the authenticated user\n *       '201':\n *         description: Invalid email or password\n *       '500':\n *         description: Unexpected error\n */\n\n\n// =====================get all=========================\n\n/**\n * @swagger\n * /user:\n *   get:\n *     summary: Get all users\n *     description: Retrieve a list of all users\n *     tags:\n *       - users\n *     responses:\n *       '200':\n *         description: A list of users\n *         content:\n *           application/json:\n *             schema:\n *               type: array\n *       '500':\n *         description: Unexpected error\n */\n// =============================update users=========================\n/**\n * @swagger\n *\n * /user/{id}:\n *   put:\n *     summary: Update a user\n *     description: Update a user with the given ID.\n *     tags: [users]\n *     parameters:\n *       - in: path\n *         name: id\n *         description: ID of the user to update\n *         required: true\n *         schema:\n *           type: string\n *       - in: body\n *         name: user\n *         description: The user object to update\n *         required: true\n *     responses:\n *       200:\n *         description: The updated user\n *       401:\n *         description: Unauthorized\n *       500:\n *         description: Internal server error\n */\n\n// ======================delete========================\n\n/**\n * @swagger\n * /user/{id}:\n *   delete:\n *     summary: Delete a user by ID\n *     description: Deletes a user based on their ID. Only the user who owns the account can delete their account.\n *     tags: [users]\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *         description: The ID of the user to delete\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               userId:\n *                 type: string\n *                 description: The ID of the user making the request\n *             example:\n *               userId: 1234567890\n *     responses:\n *       '200':\n *         description: User successfully deleted\n *       '401':\n *         description: Only the user who owns the account can delete their account\n *       '404':\n *         description: User not found\n */\n\n\n/**\n * @swagger\n * /user/{id}:\n *   get:\n *     summary: Get a users item by ID\n *     tags: [users]\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *         description: ID of the users item to retrieve\n *     responses:\n *       200:\n *         description: Returns the users item with the specified ID\n *         schema:\n *           $ref: '#/definitions/users'\n *       404:\n *         description: users item not found\n *       500:\n *         description: Internal server error\n */"],"mappingstBA"}