{"version":3,"file":"adminDocs.js","names":[],"sources":["../../../src/Docs/adminDocs.js"],"sourcesContent":["/**\r\n * @swagger\r\n * definitions:\r\n *   Facility:\r\n *     type: object\r\n *     properties:\r\n *       facility:\r\n *         type: array\r\n *         items:\r\n *           type: object\r\n *           properties:\r\n *             facilityname:\r\n *               type: string\r\n *               required: true\r\n *               description: The name of the facility\r\n *             subFacility:\r\n *               type: array\r\n *               items:\r\n *                 type: object\r\n *                 properties:\r\n *                   facility_number:\r\n *                     type: string\r\n *                     required: true\r\n *                     description: The facility number\r\n *                   capacity:\r\n *                     type: integer\r\n *                     required: true\r\n *                     description: The maximum capacity of the sub-facility\r\n *     required:\r\n *       - facility\r\n *       - desc\r\n *\r\n * /admin/create:\r\n *   post:\r\n *     summary: Create a new facility\r\n *     description: Creates a new facility with the provided details and image\r\n *     consumes:\r\n *       - multipart/form-data\r\n *     produces:\r\n *       - application/json\r\n *     requestBody:\r\n *       content:\r\n *         multipart/form-data:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               image:\r\n *                 type: string\r\n *                 format: binary\r\n *                 description: The image file for the facility\r\n *               desc:\r\n *                 type: string\r\n *                 required: true\r\n *                 description: The description of the facility\r\n *               facility:\r\n *                 $ref: '#/definitions/Facility'\r\n *     responses:\r\n *       200:\r\n *         description: Facility created successfully\r\n *       400:\r\n *         description: Invalid input provided\r\n *       500:\r\n *         description: Failed to create facility\r\n */\r\n\r\n\r\n// ===================get all====================\r\n/**\r\n * @swagger\r\n * /admin:\r\n *   get:\r\n *     summary: Retrieve all facilities\r\n *     tags: [Admin]\r\n *     responses:\r\n *       200:\r\n *         description: A list of facilities\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: array\r\n *       500:\r\n *         description: Internal server error\r\n */\r\n\r\n// ===================get one=======================\r\n/**\r\n * @swagger\r\n * /admin/{id}:\r\n *   get:\r\n *     summary: Get a facility by id\r\n *     tags:\r\n *       - Admin\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         description: Facility id\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *     responses:\r\n *       '200':\r\n *         description: OK\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               $ref: '#/components/schemas/Facility'\r\n *       '404':\r\n *         description: Facility not found\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               $ref: '#/components/schemas/Error'\r\n *       '500':\r\n *         description: Internal server error\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               $ref: '#/components/schemas/Error'\r\n */\r\n\r\n\r\n// ==========================delete=====================\r\n\r\n/**\r\n * @swagger\r\n * /admin/{id}:\r\n *   delete:\r\n *     summary: Delete a facility by id\r\n *     tags:\r\n *       - Admin\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         description: Facility id\r\n *         required: true\r\n *         schema:\r\n *           type: string\r\n *     responses:\r\n *       '200':\r\n *         description: Facility deleted successfully\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: string\r\n *               example: Facility has been deleted.\r\n *       '404':\r\n *         description: Facility not found\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               $ref: '#/components/schemas/Error'\r\n *       '500':\r\n *         description: Internal server error\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               $ref: '#/components/schemas/Error'\r\n */\r\n\r\n\r\n// ====================================================================\r\n\r\n/**\r\n * @swagger\r\n * components:\r\n *   schemas:\r\n *     SubFacility:\r\n *       type: object\r\n *       required:\r\n *         - facility_number\r\n *         - capacity\r\n *       properties:\r\n *         facility_number:\r\n *           type: string\r\n *           description: Number of the sub-facility\r\n *         capacity:\r\n *           type: integer\r\n *           description: Capacity of the sub-facility\r\n *       example:\r\n *         facility_number: Lab 1\r\n *         capacity: 4\r\n *\r\n *     Facility:\r\n *       type: object\r\n *       required:\r\n *         - facilityname\r\n *         - subFacility\r\n *         - desc\r\n *         - image\r\n *       properties:\r\n *         facilityname:\r\n *           type: string\r\n *           description: Name of the facility\r\n *         subFacility:\r\n *           type: array\r\n *           items:\r\n *             $ref: '#/components/schemas/SubFacility'\r\n *         desc:\r\n *           type: string\r\n *           description: Description of the facility\r\n *         image:\r\n *           type: string\r\n *           format: binary\r\n *           description: Image of the facility\r\n *       example:\r\n *         facilityname: Tennis Lab\r\n *         subFacility:\r\n *           - facility_number: Lab 1\r\n *             capacity: 4\r\n *           - facility_number: Lab 2\r\n *             capacity: 4\r\n *         desc: Outdoor tennis Lab for all ages\r\n *\r\n * /admin/{id}:\r\n *   put:\r\n *     summary: Update a facility\r\n *     tags: [Admin]\r\n *     description: Update a facility by ID using the request body\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description: ID of the facility to update\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         multipart/form-data:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               facility:\r\n *                 $ref: '#/components/schemas/Facility'\r\n *               image:\r\n *                 type: string\r\n *                 format: binary\r\n *           encoding:\r\n *             image:\r\n *               contentType: image/jpeg\r\n *     responses:\r\n *       '200':\r\n *         description: Facility successfully updated\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               $ref: '#/components/schemas/Facility'\r\n *       '404':\r\n *         description: Facility not found\r\n *       '500':\r\n *         description: Internal server error\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ===============================changing a role========================\r\n\r\n/**\r\n * @swagger\r\n * /admin/Role/{id}:\r\n *   patch:\r\n *     summary: Update the role of a user by ID\r\n *     description: Update the role of a user by ID. Only \"user\" and \"leader\" roles are allowed.\r\n *     tags:\r\n *       - Admin\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description: The ID of the user to update.\r\n *       - in: body\r\n *         name: role\r\n *         schema:\r\n *           type: object\r\n *           properties:\r\n *             role:\r\n *               type: string\r\n *               enum: [\"user\", \"leader\"]\r\n *         required: true\r\n *         description: The new role to assign to the user.\r\n *     responses:\r\n *       200:\r\n *         description: Successfully updated the role of the user.\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 message:\r\n *                   type: string\r\n *                   description: A message indicating that the role was updated successfully.\r\n *       400:\r\n *         description: Invalid role specified in the request body.\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 message:\r\n *                   type: string\r\n *                   description: A message indicating that the specified role is invalid.\r\n *       404:\r\n *         description: User with specified ID not found.\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 message:\r\n *                   type: string\r\n *                   description: A message indicating that the user with the specified ID was not found.\r\n *       500:\r\n *         description: Failed to update the user's role.\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 message:\r\n *                   type: string\r\n *                   description: A message indicating that the update failed due to an internal server error.\r\n */\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlEA"}