{"version":3,"file":"adminDocs.js","names":[],"sources":["../../../src/Docs/adminDocs.js"],"sourcesContent":["/**\n * @swagger\n * admin/create:\n *   post:\n *     summary: Create a new facility\n *     tags: [Admin]\n *     description: |\n *       This endpoint creates a new facility with the specified facility name, sub-facility names, description, and image file.\n *     consumes:\n *       - multipart/form-data\n *     produces:\n *       - application/json\n *     requestBody:\n *       required: true\n *       content:\n *         multipart/form-data:\n *           schema:\n *             type: object\n *             properties:\n *               image:\n *                 type: string\n *                 format: binary\n *                 description: The image file for the facility\n *               facilityname:\n *                 type: string\n *                 description: The name of the facility\n *               sub:\n *                 type: array\n *                 items:\n *                   type: string\n *                 description: An array of sub-facility names\n *               desc:\n *                 type: string\n *                 description: A description of the facility\n *     responses:\n *       '201':\n *         description: Facility created successfully\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 statusbar:\n *                   type: string\n *                   example: \"success\"\n *                 message:\n *                   type: string\n *                   example: \"facility created successfully\"\n *                 facility:\n *                   $ref: '#/components/schemas/Facility'\n *       '500':\n *         description: Internal server error\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 error:\n *                   type: string\n *                   example: \"Error creating facility\"\n * components:\n *   schemas:\n *     Facility:\n *       type: object\n *       properties:\n *         facilityname:\n *           type: string\n *         sub:\n *           type: array\n *           items:\n *             type: object\n *             properties:\n *               sub:\n *                 type: string\n *         desc:\n *           type: string\n *         image:\n *           type: string\n *           format: uri\n *           description: URL of the image file uploaded to Cloudinary\n *       example:\n *         facilityname: Basketball Court\n *         sub:\n *           - sub: Half-court\n *           - sub: Full-court\n *         desc: A court for playing basketball\n *         image: https://res.cloudinary.com/demo/image/upload/v1234567890/sample.jpg\n */\n\n\n\n// ===================get all====================\n/**\n * @swagger\n * /admin:\n *   get:\n *     summary: Retrieve all facilities\n *     tags: [Admin]\n *     responses:\n *       200:\n *         description: A list of facilities\n *         content:\n *           application/json:\n *             schema:\n *               type: array\n *       500:\n *         description: Internal server error\n */\n\n// ===================get one=======================\n/**\n * @swagger\n * /admin/{id}:\n *   get:\n *     summary: Get a facility by id\n *     tags:\n *       - Admin\n *     parameters:\n *       - in: path\n *         name: id\n *         description: Facility id\n *         required: true\n *         schema:\n *           type: string\n *     responses:\n *       '200':\n *         description: OK\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/Facility'\n *       '404':\n *         description: Facility not found\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/Error'\n *       '500':\n *         description: Internal server error\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/Error'\n */\n\n\n// ==========================delete=====================\n\n/**\n * @swagger\n * /admin/{id}:\n *   delete:\n *     summary: Delete a facility by id\n *     tags:\n *       - Admin\n *     parameters:\n *       - in: path\n *         name: id\n *         description: Facility id\n *         required: true\n *         schema:\n *           type: string\n *     responses:\n *       '200':\n *         description: Facility deleted successfully\n *         content:\n *           application/json:\n *             schema:\n *               type: string\n *               example: Facility has been deleted.\n *       '404':\n *         description: Facility not found\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/Error'\n *       '500':\n *         description: Internal server error\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/Error'\n */\n\n\n// ====================================================================\n\n/**\n * @swagger\n * components:\n *   schemas:\n *     SubFacility:\n *       type: object\n *       required:\n *         - facility_number\n *         - capacity\n *       properties:\n *         facility_number:\n *           type: string\n *           description: Number of the sub-facility\n *         capacity:\n *           type: integer\n *           description: Capacity of the sub-facility\n *       example:\n *         facility_number: Lab 1\n *         capacity: 4\n *\n *     Facility:\n *       type: object\n *       required:\n *         - facilityname\n *         - subFacility\n *         - desc\n *         - image\n *       properties:\n *         facilityname:\n *           type: string\n *           description: Name of the facility\n *         subFacility:\n *           type: array\n *           items:\n *             $ref: '#/components/schemas/SubFacility'\n *         desc:\n *           type: string\n *           description: Description of the facility\n *         image:\n *           type: string\n *           format: binary\n *           description: Image of the facility\n *       example:\n *         facilityname: Tennis Lab\n *         subFacility:\n *           - facility_number: Lab 1\n *             capacity: 4\n *           - facility_number: Lab 2\n *             capacity: 4\n *         desc: Outdoor tennis Lab for all ages\n *\n * /admin/{id}:\n *   put:\n *     summary: Update a facility\n *     tags: [Admin]\n *     description: Update a facility by ID using the request body\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *         description: ID of the facility to update\n *     requestBody:\n *       required: true\n *       content:\n *         multipart/form-data:\n *           schema:\n *             type: object\n *             properties:\n *               facility:\n *                 $ref: '#/components/schemas/Facility'\n *               image:\n *                 type: string\n *                 format: binary\n *           encoding:\n *             image:\n *               contentType: image/jpeg\n *     responses:\n *       '200':\n *         description: Facility successfully updated\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/Facility'\n *       '404':\n *         description: Facility not found\n *       '500':\n *         description: Internal server error\n */\n\n\n\n\n\n\n\n// ===============================changing a role========================\n\n/**\n * @swagger\n * /admin/Role/{id}:\n *   patch:\n *     summary: Update the role of a user by ID\n *     description: Update the role of a user by ID. Only \"user\" and \"leader\" roles are allowed.\n *     tags:\n *       - Admin\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *         description: The ID of the user to update.\n *       - in: body\n *         name: role\n *         schema:\n *           type: object\n *           properties:\n *             role:\n *               type: string\n *               enum: [\"user\", \"leader\"]\n *         required: true\n *         description: The new role to assign to the user.\n *     responses:\n *       200:\n *         description: Successfully updated the role of the user.\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   description: A message indicating that the role was updated successfully.\n *       400:\n *         description: Invalid role specified in the request body.\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   description: A message indicating that the specified role is invalid.\n *       404:\n *         description: User with specified ID not found.\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   description: A message indicating that the user with the specified ID was not found.\n *       500:\n *         description: Failed to update the user's role.\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   description: A message indicating that the update failed due to an internal server error.\n */\n"],"mappingslEA"}