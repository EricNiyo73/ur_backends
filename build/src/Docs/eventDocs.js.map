{"version":3,"file":"eventDocs.js","names":[],"sources":["../../../src/Docs/eventDocs.js"],"sourcesContent":["/**\r\n * @swagger\r\n * components:\r\n *   schemas:\r\n *     eventModel:\r\n *       type: object\r\n *       properties:\r\n *         _id:\r\n *           type: string\r\n *           description: The auto-generated id of the event.\r\n *           readOnly: true\r\n *         eventTitle:\r\n *           type: string\r\n *           description: The title of the event.\r\n *           example: \"My Event\"\r\n *         eventContent:\r\n *           type: string\r\n *           description: The content of the event.\r\n *           example: \"This is my event description.\"\r\n *         eventImage:\r\n *           type: string\r\n *           description: The URL of the image associated with the event.\r\n *           example: \"https://example.com/images/my-event.jpg\"\r\n *         date:\r\n *           type: string\r\n *           format: date-time\r\n *           description: The date the event was created.\r\n *           readOnly: true\r\n *   requestBodies:\r\n *     EventRequestBody:\r\n *       required: true\r\n *       content:\r\n *         multipart/form-data:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               eventTitle:\r\n *                 type: string\r\n *                 description: The title of the event.\r\n *                 example: \"My Event\"\r\n *               eventContent:\r\n *                 type: string\r\n *                 description: The content of the event.\r\n *                 example: \"This is my event description.\"\r\n *               eventImage:\r\n *                 type: string\r\n *                 format: binary\r\n *                 description: The image file for the event.\r\n *     UpdateEventRequestBody:\r\n *       required: true\r\n *       content:\r\n *         multipart/form-data:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               eventTitle:\r\n *                 type: string\r\n *                 description: The title of the event.\r\n *                 example: \"My Event\"\r\n *               eventContent:\r\n *                 type: string\r\n *                 description: The content of the event.\r\n *                 example: \"This is my event description.\"\r\n *               eventImage:\r\n *                 type: string\r\n *                 format: binary\r\n *                 description: The updated image file for the event.\r\n */\r\n\r\n// -==============================create events=========================\r\n\r\n/**\r\n * @swagger\r\n * /events/create:\r\n *   post:\r\n *     summary: Create a new event\r\n *     tags: [Events]\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         multipart/form-data:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               eventImage:\r\n *                 type: string\r\n *                 format: binary\r\n *               eventTitle:\r\n *                 type: string\r\n *               eventContent:\r\n *                 type: string\r\n *     responses:\r\n *       '200':\r\n *         description: Successfully created a new event\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 saveEvent:\r\n *                   type: object\r\n *                   $ref: '#/components/schemas/Event'\r\n *                 status:\r\n *                   type: string\r\n *       '400':\r\n *         description: Bad request, missing required fields\r\n *       '500':\r\n *         description: Internal server error\r\n */\r\n\r\n// ===========================get all events==================\r\n\r\n/**\r\n * @swagger\r\n * /events:\r\n *   get:\r\n *     summary: Get all events\r\n *     responses:\r\n *       200:\r\n *         description: A list of all events\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 data:\r\n *                   type: array\r\n *                   items:\r\n *                     $ref: '#/components/schemas/Event'\r\n */\r\n\r\n\r\n// ========================one events=====================\r\n/**\r\n * @swagger\r\n * /events/{id}:\r\n *   get:\r\n *     summary: Get a single event by ID\r\n *     tags: [Events]\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         required: true\r\n *         description: ID of the event to retrieve\r\n *         schema:\r\n *           type: string\r\n *     responses:\r\n *       200:\r\n *         description: Returns the event object\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               $ref: '#/components/schemas/Event'\r\n *       500:\r\n *         description: Internal server error\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 error:\r\n *                   type: string\r\n *                   example: Server error, please try again later\r\n */\r\n\r\n\r\n// ===================get all=====================\r\n\r\n/**\r\n * @swagger\r\n * /events:\r\n *   get:\r\n *     summary: Get all events\r\n *     tags: [Events]\r\n *     description: Retrieve a list of all events.\r\n *     responses:\r\n *       200:\r\n *         description: OK. Returns a list of all events.\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 data:\r\n *                   type: array\r\n *                   items:\r\n *                     type: object\r\n *                     properties:\r\n *                       _id:\r\n *                         type: string\r\n *                         description: The ID of the event.\r\n *                       name:\r\n *                         type: string\r\n *                         description: The name of the event.\r\n *                       date:\r\n *                         type: string\r\n *                         format: date-time\r\n *                         description: The date and time of the event.\r\n *                       location:\r\n *                         type: string\r\n *                         description: The location of the event.\r\n *                       description:\r\n *                         type: string\r\n *                         description: A description of the event.\r\n *       500:\r\n *         description: Internal Server Error. Something went wrong on the server.\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 message:\r\n *                   type: string\r\n *                   description: A message describing the error.\r\n */\r\n\r\n\r\n// ==================update=============================\r\n\r\n/**\r\n * @swagger\r\n * /events/{id}:\r\n *   put:\r\n *     summary: Update an event by ID\r\n *     tags: [Events]\r\n *     description: Update an existing event with new data.\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description: The ID of the event to update.\r\n *     requestBody:\r\n *       required: true\r\n *       description: The updated event data, including an image file.\r\n *       content:\r\n *         multipart/form-data:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               eventTitle:\r\n *                 type: string\r\n *                 description: The updated eventTitle of the event.\r\n *               eventContent:\r\n *                 type: string\r\n *                 description: The updated description of the event.\r\n *               eventImage:\r\n *                 type: string\r\n *                 format: binary\r\n *                 description: An updated image file for the event.\r\n *     responses:\r\n *       200:\r\n *         description: OK. Returns the updated event.\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 _id:\r\n *                   type: string\r\n *                   description: The ID of the updated event.\r\n *                 name:\r\n *                   type: string\r\n *                   description: The updated name of the event.\r\n *                 date:\r\n *                   type: string\r\n *                   format: date-time\r\n *                   description: The updated date and time of the event.\r\n\r\n *                 description:\r\n *                   type: string\r\n *                   description: The updated description of the event.\r\n *                 image:\r\n *                   type: string\r\n *                   description: The URL of the updated image file for the event.\r\n *       500:\r\n *         description: Internal Server Error. Something went wrong on the server.\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 message:\r\n *                   type: string\r\n *                   description: A message describing the error.\r\n */\r\n\r\n// ======================delete===========================\r\n\r\n/**\r\n * @swagger\r\n * /events/{id}:\r\n *   delete:\r\n *     summary: Delete an event by ID\r\n *     tags: [Events]\r\n *     description: Delete an existing event by ID.\r\n *     parameters:\r\n *       - in: path\r\n *         name: id\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description: The ID of the event to delete.\r\n *     responses:\r\n *       200:\r\n *         description: OK. Returns a success message indicating the event was deleted.\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 message:\r\n *                   type: string\r\n *                   description: A message indicating the event was deleted.\r\n *       500:\r\n *         description: Internal Server Error. Something went wrong on the server.\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 message:\r\n *                   type: string\r\n *                   description: A message describing the error.\r\n */\r\n\r\n\r\n"],"mappingsnCA"}