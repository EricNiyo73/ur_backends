{"version":3,"file":"eventDocs.js","names":[],"sources":["../../../src/Docs/eventDocs.js"],"sourcesContent":["/**\n * @swagger\n * components:\n *   schemas:\n *     eventModel:\n *       type: object\n *       properties:\n *         _id:\n *           type: string\n *           description: The auto-generated id of the event.\n *           readOnly: true\n *         eventTitle:\n *           type: string\n *           description: The title of the event.\n *           example: \"My Event\"\n *         eventContent:\n *           type: string\n *           description: The content of the event.\n *           example: \"This is my event description.\"\n *         eventImage:\n *           type: string\n *           description: The URL of the image associated with the event.\n *           example: \"https://example.com/images/my-event.jpg\"\n *         date:\n *           type: string\n *           format: date-time\n *           description: The date the event was created.\n *           readOnly: true\n *   requestBodies:\n *     EventRequestBody:\n *       required: true\n *       content:\n *         multipart/form-data:\n *           schema:\n *             type: object\n *             properties:\n *               eventTitle:\n *                 type: string\n *                 description: The title of the event.\n *                 example: \"My Event\"\n *               eventContent:\n *                 type: string\n *                 description: The content of the event.\n *                 example: \"This is my event description.\"\n *               eventImage:\n *                 type: string\n *                 format: binary\n *                 description: The image file for the event.\n *     UpdateEventRequestBody:\n *       required: true\n *       content:\n *         multipart/form-data:\n *           schema:\n *             type: object\n *             properties:\n *               eventTitle:\n *                 type: string\n *                 description: The title of the event.\n *                 example: \"My Event\"\n *               eventContent:\n *                 type: string\n *                 description: The content of the event.\n *                 example: \"This is my event description.\"\n *               eventImage:\n *                 type: string\n *                 format: binary\n *                 description: The updated image file for the event.\n */\n\n// -==============================create events=========================\n\n/**\n * @swagger\n * /events/create:\n *   post:\n *     summary: Create a new event\n *     tags: [Events]\n *     requestBody:\n *       required: true\n *       content:\n *         multipart/form-data:\n *           schema:\n *             type: object\n *             properties:\n *               eventImage:\n *                 type: string\n *                 format: binary\n *               eventTitle:\n *                 type: string\n *               eventContent:\n *                 type: string\n *     responses:\n *       '200':\n *         description: Successfully created a new event\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 saveEvent:\n *                   type: object\n *                   $ref: '#/components/schemas/Event'\n *                 status:\n *                   type: string\n *       '400':\n *         description: Bad request, missing required fields\n *       '500':\n *         description: Internal server error\n */\n\n// ===========================get all events==================\n\n/**\n * @swagger\n * /events:\n *   get:\n *     summary: Get all events\n *     responses:\n *       200:\n *         description: A list of all events\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 data:\n *                   type: array\n *                   items:\n *                     $ref: '#/components/schemas/Event'\n */\n\n\n// ========================one events=====================\n/**\n * @swagger\n * /events/{id}:\n *   get:\n *     summary: Get a single event by ID\n *     tags: [Events]\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         description: ID of the event to retrieve\n *         schema:\n *           type: string\n *     responses:\n *       200:\n *         description: Returns the event object\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/Event'\n *       500:\n *         description: Internal server error\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 error:\n *                   type: string\n *                   example: Server error, please try again later\n */\n\n\n// ===================get all=====================\n\n/**\n * @swagger\n * /events:\n *   get:\n *     summary: Get all events\n *     tags: [Events]\n *     description: Retrieve a list of all events.\n *     responses:\n *       200:\n *         description: OK. Returns a list of all events.\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 data:\n *                   type: array\n *                   items:\n *                     type: object\n *                     properties:\n *                       _id:\n *                         type: string\n *                         description: The ID of the event.\n *                       name:\n *                         type: string\n *                         description: The name of the event.\n *                       date:\n *                         type: string\n *                         format: date-time\n *                         description: The date and time of the event.\n *                       location:\n *                         type: string\n *                         description: The location of the event.\n *                       description:\n *                         type: string\n *                         description: A description of the event.\n *       500:\n *         description: Internal Server Error. Something went wrong on the server.\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   description: A message describing the error.\n */\n\n\n// ==================update=============================\n\n/**\n * @swagger\n * /events/{id}:\n *   put:\n *     summary: Update an event by ID\n *     tags: [Events]\n *     description: Update an existing event with new data.\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *         description: The ID of the event to update.\n *     requestBody:\n *       required: true\n *       description: The updated event data, including an image file.\n *       content:\n *         multipart/form-data:\n *           schema:\n *             type: object\n *             properties:\n *               eventTitle:\n *                 type: string\n *                 description: The updated eventTitle of the event.\n *               eventContent:\n *                 type: string\n *                 description: The updated description of the event.\n *               eventImage:\n *                 type: string\n *                 format: binary\n *                 description: An updated image file for the event.\n *     responses:\n *       200:\n *         description: OK. Returns the updated event.\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 _id:\n *                   type: string\n *                   description: The ID of the updated event.\n *                 name:\n *                   type: string\n *                   description: The updated name of the event.\n *                 date:\n *                   type: string\n *                   format: date-time\n *                   description: The updated date and time of the event.\n\n *                 description:\n *                   type: string\n *                   description: The updated description of the event.\n *                 image:\n *                   type: string\n *                   description: The URL of the updated image file for the event.\n *       500:\n *         description: Internal Server Error. Something went wrong on the server.\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   description: A message describing the error.\n */\n\n// ======================delete===========================\n\n/**\n * @swagger\n * /events/{id}:\n *   delete:\n *     summary: Delete an event by ID\n *     tags: [Events]\n *     description: Delete an existing event by ID.\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *         description: The ID of the event to delete.\n *     responses:\n *       200:\n *         description: OK. Returns a success message indicating the event was deleted.\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   description: A message indicating the event was deleted.\n *       500:\n *         description: Internal Server Error. Something went wrong on the server.\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 message:\n *                   type: string\n *                   description: A message describing the error.\n */\n\n\n"],"mappingsnCA"}